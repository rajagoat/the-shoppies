{"version":3,"sources":["img/movie-icon.svg","Navbar.js","useFetch.js","img/NA.svg","Pages.js","CardList.js","img/exit-icon.svg","img/closed-icon.svg","img/open-icon.svg","Loading.js","Modal.js","Search.js","Home.js","Nominations.js","App.js","index.js"],"names":["Navbar","className","to","src","movieIcon","alt","useFetch","url","useState","data","setData","useEffect","trackPromise","fetch","then","res","json","Pages","maxPages","page","setPage","promiseInProgress","pages","isFirstRender","useRef","i","push","document","querySelectorAll","forEach","pg","isNaN","innerText","Number","setAttribute","current","scroll","querySelector","window","scrollTo","offsetTop","handleClick","secPage","terPage","onClick","map","CardList","movie","setShowModal","setId","API","idArray","Math","ceil","totalResults","image","getAttribute","NA","Response","Search","includes","imdbID","id","Poster","Title","Year","Loading","usePromiseTracker","type","color","height","width","backdrop","visible","opacity","hidden","Modal","showModal","nomData","ShowDetails","setShowDetails","isNominated","setIsNominated","img","found","length","content","genre","Genre","undefined","tag","insertAdjacentHTML","e","target","addEventListener","key","AnimatePresence","exitBeforeEnter","motion","div","variants","initial","animate","exitIcon","Actors","Plot","closedIcon","openIcon","Rated","Released","Runtime","Production","Director","Writer","Language","Country","alert","localStorage","setItem","JSON","stringify","index","splice","RemoveNom","setMovie","value","onSubmit","preventDefault","mainPage","secPages","terPages","placeholder","required","Home","Nominations","emptyNoms","nom","emptyNom","pop","location","reload","App","useReducer","localData","getItem","parse","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.963cc29c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/movie-icon.07f4ac20.svg\";","import movieIcon from './img/movie-icon.svg'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <Link to=\"/\" className=\"logo icon\">\r\n                <img src={movieIcon} alt=\"Movie Icon\" />\r\n            </Link>\r\n            <Link to=\"/\" className=\"logo\">\r\n                <h1>THE SHOPPIES</h1>\r\n            </Link>\r\n            <Link to=\"/\" className=\"links home\">Home</Link>\r\n            <Link to=\"/nominations\" className=\"links nom\">Nominations</Link>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import { useState, useEffect } from 'react';\r\nimport { trackPromise } from 'react-promise-tracker';\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        trackPromise(\r\n                fetch(url)\r\n                .then(res => {\r\n                    return res.json();\r\n                })\r\n                .then(data => {\r\n                    setData(data);\r\n                    // console.log(data);\r\n                })\r\n        )\r\n    }, [url]);\r\n\r\n    return { data };\r\n}\r\n\r\nexport default useFetch;","export default __webpack_public_path__ + \"static/media/NA.aa2bf3da.svg\";","import { useEffect, useRef } from \"react\";\r\n\r\nconst Pages = ({ maxPages, page, setPage, promiseInProgress }) => {\r\n    // console.log(maxPages);\r\n    let pages = [];\r\n    // console.log(page);\r\n    const isFirstRender = useRef(true);\r\n    for (let i = page - 2; i <= page + 2 && i <= maxPages + 2; i++) {\r\n        if (i === -1) {\r\n            pages.push('a');\r\n        } else if (i === 0) {\r\n            pages.push('b');\r\n        } else if (i === maxPages + 1) {\r\n            pages.push('c');\r\n        } else if (i === maxPages + 2) {\r\n            pages.push('d');\r\n        } else {\r\n            pages.push(i);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const pages = document.querySelectorAll('.page-number');\r\n        // console.log(pages);\r\n        pages.forEach(pg => {\r\n            if (!isNaN(pg.innerText)) {\r\n                if (Number(pg.innerText) === page) {\r\n                    pg.setAttribute('class', 'main-page');\r\n                } else if (Number(pg.innerText) === page - 1 || Number(pg.innerText) === page + 1) {\r\n                    pg.setAttribute('class', 'secondary-page');\r\n                }\r\n                else if (Number(pg.innerText) === page - 2 || Number(pg.innerText) === page + 2) {\r\n                    pg.setAttribute('class', 'tertiary-page');\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (isFirstRender.current) {\r\n            isFirstRender.current = false;\r\n        } else {\r\n            const scroll = document.querySelector('.search input');\r\n            window.scrollTo(0, scroll.offsetTop-20);\r\n        }\r\n    }, [page]);\r\n\r\n    const handleClick = (page) => {\r\n        const mainPage = document.querySelector('.main-page');\r\n        mainPage.setAttribute('class', 'page-number');\r\n        const secPages = document.querySelectorAll('.secondary-page');\r\n        secPages.forEach(secPage => {\r\n            secPage.setAttribute('class', 'page-number');\r\n        })\r\n        const terPages = document.querySelectorAll('.tertiary-page');\r\n        terPages.forEach(terPage => {\r\n            terPage.setAttribute('class', 'page-number');\r\n        })\r\n        setPage(page);\r\n        // useEffect();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!promiseInProgress && <div className=\"pages\">\r\n                {page !== 1 ? <div className=\"previous\" onClick={() => handleClick(page - 1)}>\r\n                    Previous\r\n            </div> : <div className=\"previous-hidden\">\r\n                    Previous\r\n                </div>}\r\n                {pages.map(pg => (\r\n                    <div\r\n                        className=\"page-number\"\r\n                        key={pg}\r\n                        onClick={() => handleClick(pg)}\r\n                    >\r\n                        {pg}\r\n                    </div>\r\n                ))}\r\n                {page !== maxPages ? <div className=\"next\" onClick={() => handleClick(page + 1)}>\r\n                    Next\r\n            </div> : <div className=\"next-hidden\">\r\n                    Next\r\n            </div>}\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pages;","import { useEffect } from \"react\";\r\nimport useFetch from \"./useFetch\";\r\nimport NA from './img/NA.svg';\r\nimport Pages from \"./Pages\";\r\n\r\nconst CardList = ({ movie, setShowModal, setId, page, setPage }) => {\r\n    const API = `https://www.omdbapi.com/?s=${movie}&apikey=da1f5ac0&type=movie&page=${page}`;\r\n    // console.log(API);\r\n    const { data } = useFetch(API);\r\n    let idArray = [];\r\n    if (data != null) {\r\n        var maxPages = Math.ceil(data.totalResults / 10); // this has global scope\r\n        // console.log(maxPages);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data != null) {\r\n            const img = document.querySelectorAll('.poster');\r\n            img.forEach((image) => {\r\n                if (image.getAttribute('src') === 'N/A') {\r\n                    image.setAttribute('src', NA);\r\n                }\r\n            })\r\n        }\r\n    }, [data]);\r\n\r\n    const handleClick = (id) => {\r\n        setShowModal(true);\r\n        // console.log(id);\r\n        setId(id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"card-list\">\r\n                {data && data.Response === 'False' && <h1 className=\"no-results\">No Results Found</h1>}\r\n                {data && data.Response !== 'False' && data.Search.map((movie) => {\r\n                    // console.log(idArray);\r\n                    if (!idArray.includes(movie.imdbID)) {\r\n                        idArray.push(movie.imdbID);\r\n                        return (\r\n                            <li className=\"card\" key={`${movie.imdbID}`} onClick={() => handleClick(movie.imdbID)}>\r\n                                <img className=\"poster\" src={`${movie.Poster}`} alt=\"Movie Poster\" />\r\n                                <div className=\"container\">\r\n                                    <h3 className=\"title\">{movie.Title}</h3>\r\n                                    <p className=\"year\">{movie.Year}</p>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                })}\r\n            </ul>\r\n            {data && data.Response !== 'False' && <Pages maxPages={maxPages} page={Number(page)} setPage={setPage} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","export default __webpack_public_path__ + \"static/media/exit-icon.bf0343e8.svg\";","export default __webpack_public_path__ + \"static/media/closed-icon.9e2ec151.svg\";","export default __webpack_public_path__ + \"static/media/open-icon.bd14231d.svg\";","import { usePromiseTracker } from 'react-promise-tracker';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Loading = ({className}) => {\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    return (\r\n        promiseInProgress && <div className={className}>\r\n            <Loader type=\"ThreeDots\" color=\"#d5d5d5\" height=\"100\" width=\"100\" />\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Loading;","// import { useEffect } from \"react\";\r\nimport NA from './img/NA.svg';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport useFetch from './useFetch';\r\nimport exitIcon from './img/exit-icon.svg';\r\nimport closedIcon from './img/closed-icon.svg';\r\nimport openIcon from './img/open-icon.svg';\r\nimport { useState, useEffect } from 'react';\r\nimport { usePromiseTracker } from 'react-promise-tracker';\r\nimport Loading from './Loading';\r\n\r\nconst backdrop = {\r\n    visible: { opacity: 1 },\r\n    hidden: { opacity: 0 }\r\n};\r\n\r\nconst Modal = ({ showModal, setShowModal, id, setId, nomData }) => {\r\n    const API = `https://www.omdbapi.com/?i=${id}&apikey=da1f5ac0&plot=short`;\r\n    // console.log(API);\r\n    const { data } = useFetch(API);\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    const [ShowDetails, setShowDetails] = useState(false);\r\n    const [isNominated, setIsNominated] = useState(false);\r\n\r\n    if (data !== null) {\r\n        const img = document.querySelector('.poster');\r\n        if (img !== null) {\r\n            if (img.getAttribute('src') === 'N/A') {\r\n                img.setAttribute('src', NA);\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let found = false;\r\n        for (let i = 0; i < nomData.length; i++) {\r\n            if (nomData[i].imdbID === id) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        if (found) {\r\n            setIsNominated(true);\r\n        } else {\r\n            setIsNominated(false);\r\n        }\r\n    }, [id, nomData, data]);\r\n\r\n    useEffect(() => {\r\n        const content = document.querySelector('.title-modal');\r\n        if (data !== null) {\r\n            var genre = data.Genre; // this has global scope\r\n        }\r\n        const genreTags = [\r\n            'Action',\r\n            'Adventure',\r\n            'Animation',\r\n            'Biography',\r\n            'Comedy',\r\n            'Crime',\r\n            'Documentary',\r\n            'Drama',\r\n            'Family',\r\n            'Fantasy',\r\n            'Horror',\r\n            'Music',\r\n            'Mystery',\r\n            'Romance',\r\n            'Sci-Fi',\r\n            'Short',\r\n            'Sport',\r\n            'Thriller',\r\n            'War'\r\n        ]\r\n        // console.log(genre);\r\n        if (genre !== undefined && content !== null) {\r\n            genreTags.forEach(tag => {\r\n                if (genre.includes(tag)) {\r\n                    // console.log(`<p>${tag}</p>`);\r\n                    content.insertAdjacentHTML('afterend', `<p class=\"genre\">${tag}</p>`);\r\n                }\r\n            });\r\n        }\r\n    }, [data]);\r\n\r\n    const handleClick = e => {\r\n        if (e.target === document.querySelector('div.backdrop') || e.target === document.querySelector('img.exit')) {\r\n            setShowModal(false);\r\n            setId('');\r\n            setShowDetails(false);\r\n        }\r\n    };\r\n\r\n    document.addEventListener('keydown', (e) => {\r\n        if (showModal && e.key === 'Escape') {\r\n            setShowModal(false);\r\n            setId('');\r\n            setShowDetails(false);\r\n        }\r\n    });\r\n\r\n    const Nom = () => {\r\n        if (nomData.length === 5) {\r\n            alert('Your nominations are full!');\r\n        } else {\r\n            nomData.push(data);\r\n            localStorage.setItem('nominations', JSON.stringify(nomData));\r\n            setIsNominated(true);\r\n        } \r\n    }\r\n\r\n    const RemoveNom = () => {\r\n        for (let i = 0; i < nomData.length; i++) {\r\n            if (nomData[i].imdbID === id) {\r\n                var index = i;\r\n                break;\r\n            }\r\n        }\r\n        nomData.splice(index, 1);\r\n        localStorage.setItem('nominations', JSON.stringify(nomData));\r\n        setIsNominated(false);\r\n    }\r\n \r\n    return (\r\n        <AnimatePresence exitBeforeEnter>\r\n            { showModal && (\r\n                <motion.div className=\"backdrop\"\r\n                    variants={backdrop}\r\n                    initial=\"hidden\"\r\n                    animate=\"visible\"\r\n                    onClick={(e) => handleClick(e)}\r\n                >\r\n                    <Loading />\r\n                    {!promiseInProgress && data && <motion.div className=\"modal\">\r\n                        <img className=\"poster\" src={data.Poster} alt=\"Movie Poster\" />\r\n                        <div className=\"data\">\r\n                            <img className=\"exit\" src={exitIcon} alt=\"Exit Icon\" onClick={(e) => handleClick(e)} />\r\n                            <div className=\"info\">\r\n                                <h3 className=\"title-modal\">{data.Title}</h3>\r\n                                <p className=\"actors\"><b>Actors: </b>{data.Actors}</p>\r\n                                <p className=\"plot\"><b>Plot Summary: </b>{data.Plot}</p>\r\n                                {!ShowDetails && (\r\n                                    <div className=\"less-details\" onClick={() => setShowDetails(true)}>\r\n                                        <img className=\"closed\" src={closedIcon} alt=\"Closed Icon\" />\r\n                                        <h4>More Details</h4>\r\n                                    </div>\r\n                                )}\r\n                                {ShowDetails && (\r\n                                    <div>\r\n                                        <div className=\"more-details\" onClick={() => setShowDetails(false)}>\r\n                                            <img className=\"open\" src={openIcon} alt=\"Open Icon\" />\r\n                                            <h4>Less Details</h4>\r\n\r\n                                        </div>\r\n                                        <div className=\"more-details-info\" >\r\n                                            <p><b>Rated:</b> {data.Rated}</p>\r\n                                            <p><b>Released:</b> {data.Released}</p>\r\n                                            <p><b>Runtime:</b> {data.Runtime}</p>\r\n                                            <p><b>Produced by:</b> {data.Production}</p>\r\n                                            <p><b>Director(s):</b> {data.Director}</p>\r\n                                            <p><b>Writer(s):</b> {data.Writer}</p>\r\n                                            <p><b>Language:</b> {data.Language}</p>\r\n                                            <p><b>Country:</b> {data.Country}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            {!isNominated && <button onClick={() => Nom()}>NOMINATE</button>}\r\n                            {isNominated && <button className=\"nominated\" onClick={() => RemoveNom()}>NOMINATED</button>}\r\n                        </div>\r\n                    </motion.div>}\r\n                </motion.div>\r\n            )}\r\n        </AnimatePresence>\r\n    );\r\n}\r\n\r\nexport default Modal;","import { useEffect } from 'react';\r\n\r\nconst Search = ({ setMovie, page, setPage }) => {\r\n\r\n    useEffect(() => {\r\n        const value = document.querySelector('div > form input');\r\n        value.setAttribute('size', value.getAttribute('placeholder').length);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const pages = document.querySelectorAll('.page-number');\r\n        // console.log(pages);\r\n        pages.forEach(pg => {\r\n            if (!isNaN(pg.innerText)) {\r\n                if (Number(pg.innerText) === page) {\r\n                    pg.setAttribute('class', 'main-page');\r\n                } else if (Number(pg.innerText) === page - 1 || Number(pg.innerText) === page + 1) {\r\n                    pg.setAttribute('class', 'secondary-page');\r\n                }\r\n                else if (Number(pg.innerText) === page - 2 || Number(pg.innerText) === page + 2) {\r\n                    pg.setAttribute('class', 'tertiary-page');\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setMovie(e.target[0].value);\r\n        // console.log(e.target[0].value);\r\n        const mainPage = document.querySelector('.main-page');\r\n        if (mainPage !== null) {\r\n            mainPage.setAttribute('class', 'page-number');\r\n        }\r\n        const secPages = document.querySelectorAll('.secondary-page');\r\n        if (secPages !== null) {\r\n            secPages.forEach(secPage => {\r\n                secPage.setAttribute('class', 'page-number');\r\n            })\r\n        }\r\n        const terPages = document.querySelectorAll('.tertiary-page');\r\n        if (terPages !== null) {\r\n            terPages.forEach(terPage => {\r\n                terPage.setAttribute('class', 'page-number');\r\n            })\r\n        }\r\n        setPage(1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder={`Search for any movie (ex: Star Wars)`}\r\n                        required\r\n                    />\r\n                <button>Search</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import { useState } from 'react';\r\nimport CardList from './CardList';\r\nimport Modal from './Modal';\r\nimport Search from \"./Search\"\r\n\r\nconst Home = ({nomData}) => {\r\n    const [movie, setMovie] = useState('Star Wars');\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [page, setPage] = useState('1');\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <h2>Find and nominate your favourite movies <br /> for the annual Shoppies!</h2>\r\n            <Search setMovie={setMovie} page={page} setPage={setPage}/>\r\n            <Modal\r\n                showModal={showModal}\r\n                setShowModal={setShowModal}\r\n                id={id}\r\n                setId={setId}\r\n                nomData={nomData}\r\n            />\r\n            <CardList\r\n                movie={movie}\r\n                setShowModal={setShowModal}\r\n                setId={setId}\r\n                page={page}\r\n                setPage={setPage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import { useState } from 'react';\r\nimport Modal from './Modal';\r\n\r\nconst Nominations = ({ nomData }) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [id, setId] = useState('');\r\n    \r\n    const emptyNoms = [];\r\n    for (let i = nomData.length; i < 5; i++) {\r\n        emptyNoms.push(i);\r\n    }\r\n\r\n    const handleClick = (id) => {\r\n        setShowModal(true);\r\n        // console.log(id);\r\n        setId(id);\r\n    }\r\n\r\n    const clearData = () => {\r\n        for (let i = 0; i < nomData.length; i++) {\r\n            nomData.pop();\r\n        }\r\n        localStorage.setItem('nominations', JSON.stringify(nomData));\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div className=\"nominations\">\r\n            <Modal\r\n                showModal={showModal}\r\n                setShowModal={setShowModal}\r\n                id={id}\r\n                setId={setId}\r\n                nomData={nomData}\r\n            />\r\n            <h1 className=\"nominations-title\">Your Nominations:</h1>\r\n            <div className=\"nominations-grid\">\r\n                {nomData && nomData.map(nom => (\r\n                    <li className=\"card\" key={`${nom.imdbID}`} onClick={() => handleClick(nom.imdbID)}>\r\n                        <img className=\"poster\" src={`${nom.Poster}`} alt=\"Movie Poster\" />\r\n                        <div className=\"container\">\r\n                            <h3 className=\"title\">{nom.Title}</h3>\r\n                            <p className=\"year\">{nom.Year}</p>\r\n                        </div>\r\n                    </li>\r\n                ))}\r\n                {emptyNoms.length !== 0 && emptyNoms.map(emptyNom => (\r\n                    <li className=\"empty\" key={emptyNom}>\r\n                        <h3>Missing Nomination</h3>\r\n                    </li>\r\n                ))}\r\n            </div>\r\n            {nomData.length !== 0 && <button onClick={clearData}>Clear All</button>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nominations;","import Navbar from \"./Navbar\";\nimport Home from './Home';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Nominations from \"./Nominations\";\nimport { useReducer } from \"react\";\n\nfunction App() {\n  const [nomData] = useReducer([], [], () => {\n    const localData = localStorage.getItem('nominations');\n    return localData ? JSON.parse(localData) :  [];\n  });\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/'>\n            <Home nomData={nomData}/>\n          </Route>\n          <Route path='/nominations'>\n            <Nominations nomData={nomData}/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}